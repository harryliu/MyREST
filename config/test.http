tasks: 
. (done) 支持多种数据库类型
. (done) 支持Scalar标量查询
. 支持 parameters 
. toml 判空处理
. 增加日志
. 增加单元测试
. 项目文档撰写
. 增加安全插件机制,  Auth插件
. Firewall 改造成安全插件形式
. 增加 health check 
. 支持优雅停机



==============================
Swagger UI url 
==============================
https://localhost:7241/swagger/index.html 


==============================
API format 
==============================
POST https://localhost:7241/invoke HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "string",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "string",
      "sqlId": "string",
      "sql": "string",
      "parameters": [
        {
          "name": "string",
          "value": "string",
          "dataType": "string",
          "direction": "string",
          "format": "string"
        }
      ]
    },
    "traceId": "string"
  }
}

   
==============================
Test client side SQL 
==============================
POST https://localhost:7241/invoke HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select actor_id , first_name FirstName, last_name LastName, last_update LastUpdate   from actor      ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}

==============================
Test Scalar select 
==============================
POST https://localhost:7241/invoke HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": true,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select count(*) from actor      ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}



==============================
Test DML statement  
==============================
POST https://localhost:7241/invoke HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": false,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "update actor set first_name='10' where actor_id=1 ;update actor set first_name='20' where actor_id=2 ; ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}

==============================
Test server side sql
==============================
POST https://localhost:7241/invoke HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "/sql/sampleSql.xml",
      "sqlId": "queryAllActors",
      "sql": "",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}




==============================
compress response
==============================
POST https://localhost:7241/invoke HTTP/1.1
Content-type: application/json
Accept-Encoding: br, gzip

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select actor_id , first_name FirstName, last_name LastName, last_update LastUpdate   from actor      ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}