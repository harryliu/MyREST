

tasks: 
. (done) 支持多种数据库类型
. (done) 支持Scalar标量查询
. (done)支持 parameters 
. toml 判空处理
. 增加日志
. 增加单元测试
. 项目文档撰写
. (done)Firewall 改造成安全插件形式
. JWT Auth 安全插件
. 增加 health check 
. 支持优雅停机
. 支持 miniProfiler




==============================
Swagger UI url 
==============================
http://localhost:5001/swagger/index.html 


==============================
API format 
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "string",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "string",
      "sqlId": "string",
      "sql": "string",
      "parameters": [
        {
          "name": "string",
          "value": "string",
          "dataType": "string",
          "direction": "string",
          "format": "string",
          "separator":"string"
        }
      ]
    },
    "traceId": "string"
  }
}

   
==============================
Test client side SQL 
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select actor_id , first_name FirstName, last_name LastName, last_update LastUpdate   from actor      ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}

==============================
Test Scalar select 
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": true,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select count(*) from actor      ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}



==============================
Test DML statement  
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": false,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "update actor set first_name='10' where actor_id=1 ;update actor set first_name='20' where actor_id=2 ; ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}

==============================
Test server side sql
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "/sql/sampleSql.xml",
      "sqlId": "queryAllActors",
      "sql": "",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}




==============================
compress response
==============================
POST http://localhost:5001/run HTTP/1.1
Content-type: application/json
Accept-Encoding: br, gzip

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select actor_id , first_name FirstName, last_name LastName, last_update LastUpdate   from actor      ",  
      "parameters":[]
    },
    "traceId": "1111"
  }
}



==============================
Test client side SQL with parameter
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select actor_id , first_name FirstName, last_name LastName, last_update LastUpdate   from actor   where actor_id=@actorId1 or actor_id=@actorId2     ",  
      "parameters":[
         {
          "name": "@actorId1",
          "value": "1",
          "dataType": "Int32",
          "direction": "Input",
          "format": "",
          "separator":""
        },
        {
          "name": "@actorId2",
          "value": "20",
          "dataType": "Int32",
          "direction": "Input",
          "format": "",
          "separator":""
        }
      ]
    },
    "traceId": "1111"
  }
}


==============================
Test server side SQL with parameters
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "/sql/sampleSql.xml",
      "sqlId": "queryOneActor",
      "sql": "",  
      "parameters":[
         {
          "name": "@id",
          "value": "1",
          "dataType": "",
          "direction": "",
          "format": "",
          "separator":""
        }
      ]
    },
    "traceId": "1111"
  }
}

 

==============================
Test IN clause for MySQL DB
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db1",
      "isSelect": true,
      "isScalar": false,      
      "sqlFile": "",
      "sqlId": "",
      "sql": "select actor_id , first_name FirstName, last_name LastName, last_update LastUpdate  from actor where actor_id in @ids",  
      "parameters":[
         {
          "name": "@id",
          "value": "1,2",
          "dataType": "Decimal Array",
          "direction": "Input",
          "format": ",",
          "separator":","
        }
      ]
    },
    "traceId": "1111"
  }
}



==============================
Test IN clause for MS SQL server DB
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db2",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "select * from oee.dbo.OEE_Hour_Dimension where Hour_Id in @hourid ",  
      "parameters":[       
        {
          "name": "@hourid",
          "value": "2021-12-16 00,2021-12-16 10",
          "dataType": "String Array",
          "direction": "Input",
          "format": "",
          "separator":","
        }
      ]
    },
    "traceId": "1111"
  }
}


==============================
Test IN clause for postgresql DB
==============================
POST http://localhost:5001/run HTTP/1.1
content-type: application/json

{
  "request": {
    "sqlContext": {
      "db": "db3",
      "isSelect": true,
      "isScalar": false,
      "sqlFile": "",
      "sqlId": "",
      "sql": "SELECT id, name , age, email FROM mybatis.users where id in :ids",  
      "parameters":[       
        {
          "name": ":ids",
          "value": "1,2",
          "dataType": "int32 array",
          "direction": "Input",
          "format": "",
          "separator":","
        }
      ]
    },
    "traceId": "1111"
  }
}

